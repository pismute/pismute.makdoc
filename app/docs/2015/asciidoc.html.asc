== AsciiDoc

``이 글도 AsciiDoc으로 썼다''

Progit2판은 http://asciidoc.org[AsciiDoc]으로 씌어졌다. 그래서 알게 됐는데 물건이다. 글쓰기를 위한 UML이라고 생각하면 쉽겠다.

UML처럼 표현이 풍부하고 어렵지만 UML처럼 사장될 것 같지는 않다. 복잡한 것은 안쓰고 쓰는 것만 쓰면 된다. 무엇보다 asciidoctor 툴체인이 있기때문에 **latex 없이도 pdf(책)**을 쓸 수 있다. progit 1판에서 pdf 수정하느라 알지도 못하는 latex 소스를 눈알 빠지게 들여다 보던 짓은 이제 안해도 되겠다.

이제 쓰기 시작해서 아직 많이 모르지만, 너무 만족한다.

=== 장점

* Ebook을 쉽게 만들 수 있다.
* Markdown처럼 쓰면 또 어렵지 않다.
* 충분한 Ecosystem.
** GitHub.
** Editor: Atom(https://github.com/asciidoctor/atom-asciidoc-preview[asciidoctor-preview], https://atom.io/packages/language-asciidoc[language-asciidoc]), Emacs(https://github.com/sensorflo/adoc-mode[adoc-mode])
** Ebook: http://gitbook.io[gitbook]
** Static Site: https://github.com/asciidoctor/jekyll-asciidoc-quickstart[jekyll], https://github.com/pismute/gulp-makdoc[makdoc]
* 풍부한 표현과 기능: 내가 상상하던 건 다 된다.
** Include: 파일 여러개를 조합할 수 있다
** Table: 테이블 레이아웃을 자유롭게 만들 수 있다.
** Callout: 소스코드 설명할 때 편하다.
** Math: latexmath등 수식도 되는데 내가 수식 쓸일이 없어서 잘 모르겠다.
** 등등 다 된다.

=== 단점

표현과 기능이 많은 만큼 어디에 쓰이는 지 모르는 것들이 많다. Markdown은 하나하나가 매우 유용한 표현인데, Asciidoc은 어디에 쓰는지 모르겠는 것들이 많다.

=== 참고

* https://powerman.name/doc/asciidoc[Asciidoc Cheetsheet]
* http://asciidoctor.org/docs/asciidoc-writers-guide/[AsciiDoc Writer 's Guide]
* http://www.methods.co.nz/asciidoc/[AsciiDoc User Manual]
* http://www.staticgen.com/
